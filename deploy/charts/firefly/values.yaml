# Templates the firefly.core configuration file of FireFly, and in some cases configures which ports are exposed.
config:
  templateOverride: ""

  # Enables the FireFly debug port on 6060 and `DEBUG` level logs
  debugEnabled: false

  # Enables the Admin API for dynamic configuration
  adminEnabled: false

  # Puts a fresh FireFly node into the preinit state, allowing an operator to then setup smart contracts, apply database migrations, etc. before re-configuring the node to proceed.
  # It is _not_ recommended to configure FireFly nodes in a preinit state for non-development scenarios.
  preInit: false

  organizationName: ""
  organizationIdentity: ""
  fireflyContractAddress: ""

  # used for more open ended configuration of firefly core i.e. future plugins, production scenarios, etc.
  dataexchange: {}
  database: {}
  publicstorage: {}
  blockchain: {}
   # type: ethereum
   # ethereum:
   #   ethconnect:
   #     url: http://ethconnect_0:8080
   #     instance: /contracts/firefly
   #     topic: "0"

  postgresUrl: ""
  postgresAutomigrate: false

  dataexchangeUrl: ""

  #
  ipfsApiUrl: ""
  ipfsGatewayUrl: ""

  ethconnectUrl: ""
  ethconnectUsername: ""
  ethconnectPassword: ""
  ethconnectPrefixShort: ""
  ethconnectPrefixLong: ""

core:
  image:
    repository: ghcr.io/hyperledger-labs/firefly
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: latest

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    type: ClusterIP
    httpPort: 5000
    adminPort: 5001
    debugPort: 6060

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}

dataexchange:
  enabled: true

  certificate:
    enabled: false
    issuerRef: {}
     # name: interal-ca
     # kind: ClusterIssuer

  tlsSecret:
    enabled: true
    name: ""

  apiKey: ""

  image:
    repository: ghcr.io/hyperledger-labs/firefly-dataexchange-https
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: latest

  imagePullSecrets: []
  nameOverride: ""
  fullnameOverride: ""

  podAnnotations: {}

  podSecurityContext: {}
  # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
  # runAsUser: 1000

  service:
    type: ClusterIP
    apiPort: 5000
    p2pPort: 5001

  ingress:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
  #   memory: 128Mi

  nodeSelector: {}

  tolerations: []

  affinity: {}
