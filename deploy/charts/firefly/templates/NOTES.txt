1. Get the FireFly URL by running these commands:
{{- if .Values.core.ingress.enabled }}
{{- $host := index .Values.core.ingress.hosts 0 }}
  export FF_URL="http{{ if $.Values.core.ingress.tls }}s{{ end }}://{{ $host.host }}"
{{- else if contains "NodePort" .Values.core.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "firefly.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  export FF_URL="http://$NODE_IP:$NODE_PORT"
{{- else if contains "LoadBalancer" .Values.core.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "firefly.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "firefly.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  export FF_URL="http://$SERVICE_IP:{{ .Values.core.service.httpPort }}"
{{- else if contains "ClusterIP" .Values.core.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "firefly.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  export FF_URL="http://127.0.0.1:8080"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT &
{{- end }}
  echo "Visit $FF_URL/api to explore the API via Swagger"
  echo "Visit $FF_URL/ui to use explorer UI"
2. Assumiong the FireFly smart contracts have been properly deployed and registered on the chain, you can register your FireFly node's organization via the API:
  curl -X POST -d '{}' -H 'Content-Type: application/json" $FF_URL/api/v1/network/register/node/organization
3. Wait until your organization then registered, you can confirm its registration by listing the orgs:
  curl -X GET $FF_URL/api/v1/network/organizations
4. Once the org is registered, you can register the node itself:
  curl -X POST -d '{}' -H 'Content-Type: application/json" $FF_URL/api/v1/network/register/node
5. Lastly, confirm the node has been registered:
  curl -X GET $FF_URL/api/v1/network/nodes
