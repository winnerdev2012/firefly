// Code generated by mockery v1.0.0. DO NOT EDIT.

package apiservermocks

import (
	context "context"
	net "net"

	mock "github.com/stretchr/testify/mock"
)

// IServer is an autogenerated mock type for the IServer type
type IServer struct {
	mock.Mock
}

// Close provides a mock function with given fields:
func (_m *IServer) Close() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Serve provides a mock function with given fields: l
func (_m *IServer) Serve(l net.Listener) error {
	ret := _m.Called(l)

	var r0 error
	if rf, ok := ret.Get(0).(func(net.Listener) error); ok {
		r0 = rf(l)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// ServeTLS provides a mock function with given fields: l, certFile, keyFile
func (_m *IServer) ServeTLS(l net.Listener, certFile string, keyFile string) error {
	ret := _m.Called(l, certFile, keyFile)

	var r0 error
	if rf, ok := ret.Get(0).(func(net.Listener, string, string) error); ok {
		r0 = rf(l, certFile, keyFile)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Shutdown provides a mock function with given fields: ctx
func (_m *IServer) Shutdown(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
