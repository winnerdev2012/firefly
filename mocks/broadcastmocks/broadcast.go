// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package broadcastmocks

import (
	context "context"

	fftypes "github.com/kaleido-io/firefly/internal/fftypes"
	mock "github.com/stretchr/testify/mock"
)

// Broadcast is an autogenerated mock type for the Broadcast type
type Broadcast struct {
	mock.Mock
}

// BroadcastMessage provides a mock function with given fields: ctx, identity, msg, data
func (_m *Broadcast) BroadcastMessage(ctx context.Context, identity string, msg *fftypes.Message, data ...*fftypes.Data) error {
	_va := make([]interface{}, len(data))
	for _i := range data {
		_va[_i] = data[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, identity, msg)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, *fftypes.Message, ...*fftypes.Data) error); ok {
		r0 = rf(ctx, identity, msg, data...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Close provides a mock function with given fields:
func (_m *Broadcast) Close() {
	_m.Called()
}
