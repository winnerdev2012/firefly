// Code generated by mockery v1.0.0. DO NOT EDIT.

package syncasyncmocks

import (
	context "context"

	fftypes "github.com/hyperledger-labs/firefly/pkg/fftypes"
	mock "github.com/stretchr/testify/mock"
)

// Bridge is an autogenerated mock type for the Bridge type
type Bridge struct {
	mock.Mock
}

// RequestReply provides a mock function with given fields: ctx, ns, request
func (_m *Bridge) RequestReply(ctx context.Context, ns string, request *fftypes.MessageInput) (*fftypes.MessageInput, error) {
	ret := _m.Called(ctx, ns, request)

	var r0 *fftypes.MessageInput
	if rf, ok := ret.Get(0).(func(context.Context, string, *fftypes.MessageInput) *fftypes.MessageInput); ok {
		r0 = rf(ctx, ns, request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*fftypes.MessageInput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, *fftypes.MessageInput) error); ok {
		r1 = rf(ctx, ns, request)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
